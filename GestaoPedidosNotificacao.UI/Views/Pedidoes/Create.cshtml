@model GestaoPedidosNotificacao.UI.Entities.Pedido

@{
    ViewBag.Title = "Criar Pedido";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })


        @if (ViewBag.FromEntidade == true)
        {
            <div class="form-group">
                @Html.LabelFor(model => model.EntidadeId, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Entidade.Denoninacao, new { htmlAttributes = new { @class = "form-control", @disabled ="disabled" } })
                    @Html.ValidationMessageFor(model => model.EntidadeId, "", new { @class = "text-danger" })
                </div>
            </div>
        }
        else
        {
            <div class="form-group">
                @Html.LabelFor(model => model.EntidadeId, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("EntidadeId", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.EntidadeId, "", new { @class = "text-danger" })
                </div>
            </div>
        }

        <div class="form-group">
            @Html.LabelFor(model => model.NumProcesso, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.NumProcesso, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.NumProcesso, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ServicoId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("ServicoId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ServicoId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.EstadoId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("EstadoId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.EstadoId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Observacao, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Observacao, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Observacao, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DataFactura, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DataFactura, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DataFactura, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DataPagamento, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DataPagamento, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DataPagamento, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.UtilizadorId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("UtilizadorId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.UtilizadorId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Guardar" class="btn btn-primary" />

                @if (ViewBag.FromEntidade == true)
                {
                    @Html.ActionLink("Cancelar", "Details","Entidades", new { Id = Model.EntidadeId }, new { @class = "btn btn-danger" })
                }
                else
                {
                    @Html.ActionLink("Cancelar", "Index", null, new { @class = "btn btn-danger" })
                }                
            </div>
        </div>
    </div>
}


@section Scripts{
    <script>

        $("#DataFactura").datepicker({
            format: 'dd/mm/yyyy'
        });
        $("#DataPagamento").datepicker({
            format: 'dd/mm/yyyy'
        });

    </script>

}